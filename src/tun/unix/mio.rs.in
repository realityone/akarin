pub mod mio {
    use std::io;
    use std::os::unix::io::AsRawFd;

    use mio::{Poll, PollOpt, Ready, Token};
    use mio::event::Evented;
    use mio::unix::EventedFd;

    use super::Device;

    impl Evented for Device {
        fn register(&self, poll: &Poll, token: Token, events: Ready, opts: PollOpt) -> io::Result<()> {
            EventedFd(&self.as_raw_fd()).register(poll, token, events, opts)
        }

        fn reregister(&self, poll: &Poll, token: Token, events: Ready, opts: PollOpt) -> io::Result<()> {
            EventedFd(&self.as_raw_fd()).reregister(poll, token, events, opts)
        }

        fn deregister(&self, poll: &Poll) -> io::Result<()> {
            EventedFd(&self.as_raw_fd()).deregister(poll)
        }
    }
}
